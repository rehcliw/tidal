let fmfreq = pF "fmfreq"
    fmamt = pF "fmamt"

let pat = sound "bd drum ~*3%8 cpu:4*2"
in
d1
$ fast 2
$ stack [ id
$ pat
, id
$ iter 8
$ pat
, id
$ sound "<cpu:6 cpu:7>"]

d1
$ fast 2
$ superimpose ((iter 8) . (|* speed (3/2))) -- alt to let
$ stack [ id
$ sound "bd drum ~ sn"
, id
$ sound "hh*2"] # speed (3/4)

d1
$ off (-1/8) (|+ note 7) -- off 0 is same as superimpose!
$ note "50 ~ ~ 50 ~ ~ 48 ~"
# sound "simplefm"
# sustain 0.5
# gain 0.8
# fmamt 2

-- off is just stutWith 2!
-- so superimpose is stutWith 2 0
d1
$ stutWith 3 "<1%8 3%8 2%8>" (|+ note "<[7 14] 7 [14 7] 14>")
$ note "50 ~ ~ 50 ~ ~ 48 ~"
# sound "simplefm"
# sustain 0.5
# gain 0.8
# fmamt 2

d1
$ fast (3/2)
$ stutWith "<8 7 6 5>" ("3%8 1%8") ( id
. (|+ note "<-7 [[-14 7] 12]>")
. (|* sustain (3/4))
. (|* fmamt (9/8))
. (# pan (slow 2 $ range 0.25 0.75 sine)))
$ note "50 ~ ~ [53|50] ~ ~ 48 ~"
# sound "simplefm"
# sustain 0.5
# gain 0.8
# fmamt 2

-- a function for people who really, really like supersaws
let superLayer copies pitch = stutWith copies 0 (|+ note pitch)

d1
$ fast (3/2)
$ superLayer 4 "7"
$ note "50 ~ ~ 50 ~ ~ 48 ~"
# sound "simplefm"
# sustain 0.5
# gain 0.8
# fmamt 2

d1
$ fast "<[8 4 8 6] [8!2 [16 [32 64]] 12]>"
$ sound "bd drum"

d1
$ fast ( id
$ stack [ id
$ "<[8 4 8 6] [8!2 [16 [32 64]] 12]>"
, id
$ "<4 4>" ])
$ sound "bd drum"

d1
$ fast ( id
$ stutWith 3 0 (|/ 2)
$ "<[8 4 8 6] [8!2 [16 [32 64]] 12]>")
$ sound "bd drum"

d1
$ arp "<up converge down diverge>"
$ note (scale "minor bhairav" $ "[15,20,17,25,23,30,35,40]")
# octave "[7 6 8]*2"
# sound "simplefm"
# sustain "0.2 0.5"
# gain 1
# fmamt "[4 3]*4"

d2
$ rev
-- $ stutWith "<5 4 3>" ("<1%8 3%8>") ( id
$ plyWith "<5 4 3>" ( id
. (|* speed "<1.1 -1.05>")
. (# pan (slow 2 $ range 0.25 0.75 sine)))
$ fast "2 1 0.5"
$ arp "<down converge up updown pinkyupdown>"
$ stack [ id
$ sound "bssnare" # distort 0.3
, id
$ sound "speech:7 popkick:3"
, id
$ sound "superpiano"
, id
$ sound "toys:8"] # legato 1.5
