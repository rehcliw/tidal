let sli = ("[40 .. 70]/40" - 15)
in
-- xfadeIn 1 8
d1
-- $ juxBy 0.2 (rev . (|* speed "-0.9"))
$ slow 9
$ sometimes (|* speed "-0.9")
$ slice sli (id
    $ struct "t*16"
    $ slow (sli/1.9)
    $ run sli
    |+ "[0,1,3,4]"
    )
$ s "brit" 
-- # attack 0.05
-- # rel 4
# legato 1
# speed (segment 16 $ range 0.71 0.73 $ sine)
# gain 1.1
-- # cut 1

xfadeIn 1 8 silence

resetCycles

d1 silence

d2
$ stack [id
    -- $ slow 2
    $ s "<~ [~ nimb:41*4?]>" 
    --  # nudge 0.02
    # gain 0.9
    # djf 0.35
    # speed "[0.5,1.1]"
    , id
    -- $ slow 4
    $ s "nimb:11*6"
    # speed "[0.02]"
    # legato 1.1
    , id
    -- $ sometimes (plyWith 4 ((|* gain 0.9) . (|* legato 0.9)))
    -- $ striateBy "32 16 4" (4/"32 16 8")
    $ s "nimb:29"
    # legato 0.5
    # speed "[-0.19,-0.16,-0.17]"
    -- |+ n 3
    # gain 0.8
    # attack 0.05
    # rel 1
] # legato 2
# djfTake "re" [0.6,0.5,0.6,0.4,0.5]
# coarse 4

setcps 0.6